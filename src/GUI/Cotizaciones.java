/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import WebService.ArrayOfint;
import WebService.DatoscotizacionesDato;
import WebService.WsbcucotizacionesExecute;
import WebService.WsbcucotizacionesExecuteResponse;
import WebService.Wsbcucotizacionesin;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;

/**
 *
 * @author joaco
 */
public class Cotizaciones extends javax.swing.JFrame {

    /**
     * Creates new form Cotizaciones
     * @throws javax.xml.datatype.DatatypeConfigurationException
     */
    public Cotizaciones() throws DatatypeConfigurationException {
        initComponents();
        this.jDateChooser1.setDateFormatString("yyyy-MM-dd");
        this.jDateChooser2.setDateFormatString("yyyy-MM-dd");
        
        //Escondo la columna que tiene el objeto guardado.
        jTable1.getColumnModel().getColumn(4).setMinWidth(0);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(4).setWidth(0);
        DefaultTableCellRenderer Alinear = new DefaultTableCellRenderer();
        Alinear.setHorizontalAlignment(SwingConstants.LEFT);
        
        jTable1.getColumnModel().getColumn(0).setCellRenderer(Alinear);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(Alinear);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(Alinear);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(Alinear);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Moneda", "Compra", "Venta", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
        );

        jDateChooser2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser2KeyPressed(evt);
            }
        });

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyPressed(evt);
            }
        });

        jLabel1.setText("Desde: ");

        jLabel2.setText("Hasta: ");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cotizaci√≥n de hoy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooser2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser2KeyPressed
       
    }//GEN-LAST:event_jDateChooser2KeyPressed

    private void jDateChooser1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Wsbcucotizacionesin datosCotizacion = new Wsbcucotizacionesin();

            //Fechas que pide el web service------------------------------------------------------//
            Date fechaDesde = this.jDateChooser1.getDate();
            Date fechaHasta = this.jDateChooser2.getDate();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.format(this.jDateChooser1.getDate());
            sdf.format(this.jDateChooser2.getDate());

            XMLGregorianCalendar fec;
            XMLGregorianCalendar fec2;

            GregorianCalendar c = new GregorianCalendar();
            c.clear();
            c.setTime(fechaDesde);
            fec = DatatypeFactory.newInstance().newXMLGregorianCalendar(c.get(Calendar.YEAR), c.get(Calendar.MONTH) + 1, c.get(Calendar.DAY_OF_MONTH), DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED);

            GregorianCalendar c2 = new GregorianCalendar();
            c2.clear();
            c2.setTime(fechaHasta);
            fec2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c2.get(Calendar.YEAR), c2.get(Calendar.MONTH) + 1, c2.get(Calendar.DAY_OF_MONTH), DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED);

            datosCotizacion.setFechaDesde(fec);
            datosCotizacion.setFechaHasta(fec2);
            //-----------------------------------------------------------------------------------//

            //Tipo de moneda que pide el web service, 2225 es el d√≥lar---//
            ArrayOfint tipoMoneda = new ArrayOfint();
            List<Short> nroMoneda = tipoMoneda.getItem();
            Short numero = 2225;
            nroMoneda.add(numero);
            datosCotizacion.setMoneda(tipoMoneda);
            //-----------------------------------------------------------//

            //Grupo------------------------//
            byte grupo = 0;
            datosCotizacion.setGrupo(grupo);
            //-----------------------------//

            WsbcucotizacionesExecute ejecutar = new WsbcucotizacionesExecute();
            ejecutar.setEntrada(datosCotizacion);

            WsbcucotizacionesExecuteResponse respuesta = execute(ejecutar);
            List<DatoscotizacionesDato> dtc = respuesta.getSalida().getDatoscotizaciones().getDatoscotizacionesDato();

            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            model.setRowCount(0);
            for (DatoscotizacionesDato dtc1 : dtc) {               
                Object[] fila = new Object[5];
                fila[0] = dtc1.getFecha();
                fila[1] = dtc1.getCodigoISO();
                fila[2] = dtc1.getTCC();
                fila[3] = dtc1.getTCV();
                fila[4] = dtc1;
                model.addRow(fila);
            }
            
        } catch (DatatypeConfigurationException ex) {
            Logger.getLogger(Cotizaciones.class.getName()).log(Level.SEVERE, null, ex);
        }

        int shrek = 0;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            Wsbcucotizacionesin datosCotizacion = new Wsbcucotizacionesin();

            //Fechas que pide el web service------------------------------------------------------//
            Date fechaHoy = new Date();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.format(fechaHoy);

            XMLGregorianCalendar fec;
            GregorianCalendar c = new GregorianCalendar();
            c.clear();
            c.setTime(fechaHoy);
            fec = DatatypeFactory.newInstance().newXMLGregorianCalendar(c.get(Calendar.YEAR), c.get(Calendar.MONTH) + 1, c.get(Calendar.DAY_OF_MONTH), DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED);

            datosCotizacion.setFechaDesde(fec);
            datosCotizacion.setFechaHasta(fec);
            //-----------------------------------------------------------------------------------//

            //Tipo de moneda que pide el web service, 2225 es el d√≥lar---//
            ArrayOfint tipoMoneda = new ArrayOfint();
            List<Short> nroMoneda = tipoMoneda.getItem();
            Short numero = 2225;
            nroMoneda.add(numero);
            datosCotizacion.setMoneda(tipoMoneda);
            //-----------------------------------------------------------//

            //Grupo------------------------//
            byte grupo = 0;
            datosCotizacion.setGrupo(grupo);
            //-----------------------------//

            WsbcucotizacionesExecute ejecutar = new WsbcucotizacionesExecute();
            ejecutar.setEntrada(datosCotizacion);

            WsbcucotizacionesExecuteResponse respuesta = execute(ejecutar);
            List<DatoscotizacionesDato> dtc = respuesta.getSalida().getDatoscotizaciones().getDatoscotizacionesDato();

            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            model.setRowCount(0);
            for (DatoscotizacionesDato dtc1 : dtc) {
                Object[] fila = new Object[5];
                fila[0] = dtc1.getFecha();
                fila[1] = dtc1.getCodigoISO();
                fila[2] = dtc1.getTCC();
                fila[3] = dtc1.getTCV();
                fila[4] = dtc1;
                model.addRow(fila);
            }
        } catch (DatatypeConfigurationException ex) {
            Logger.getLogger(Cotizaciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cotizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cotizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cotizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cotizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Cotizaciones().setVisible(true);
                } catch (DatatypeConfigurationException ex) {
                    Logger.getLogger(Cotizaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private static WsbcucotizacionesExecuteResponse execute(WebService.WsbcucotizacionesExecute parameters) {
        WebService.Wsbcucotizaciones service = new WebService.Wsbcucotizaciones();
        WebService.WsbcucotizacionesSoapPort port = service.getWsbcucotizacionesSoapPort();
        return port.execute(parameters);
    }
}
